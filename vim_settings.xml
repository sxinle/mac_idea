<application>
  <component name="RelativeLineNumbersSettings">
    <option name="enabled" value="false" />
  </component>
  <component name="VimSettings">
    <state version="4" enabled="true" />
    <globalmarks />
    <filemarks>
      <file name="/a.dummy" timestamp="1512627038763">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/workspace/jinhui/Gogs/pointshub/app/views/mobIndex.scala.html" timestamp="1514874630026">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="93" column="6" />
        <mark key="." line="54" column="0" />
        <mark key="^" line="59" column="3" />
      </file>
      <file name="$USER_HOME$/workspace/jinhui/Gogs/pointshub/app/views/mobApps.scala.html" timestamp="1514874566954">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="116" column="0" />
      </file>
      <file name="$USER_HOME$/workspace/jinhui/Gogs/online/pointshub/conf/application.conf" timestamp="1514876668223">
        <mark key="'" line="62" column="0" />
        <mark key="[" line="15" column="39" />
        <mark key="]" line="15" column="50" />
        <mark key="." line="15" column="50" />
        <mark key="^" line="15" column="50" />
      </file>
      <file name="$USER_HOME$/workspace/jinhui/Gogs/online/pointshub/app/views/mobInvited.scala.html" timestamp="1514874653261">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="163" column="7" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/workspace/jinhui/Gogs/online/pointshub/app/views/mobGiftDetails.scala.html" timestamp="1514874623554">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="175" column="7" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/workspace/jinhui/Gogs/online/pointshub/app/views/mobMessage.scala.html" timestamp="1514874664397">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="201" column="7" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/workspace/jinhui/Gogs/online/pointshub/app/views/modConfirm.scala.html" timestamp="1514874674830">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="303" column="7" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/workspace/order-hongchuan/order-producer/app/controllers/bpmn/BpmnController.java" timestamp="1513780622251">
        <mark key="[" line="33" column="4" />
      </file>
      <file name="$USER_HOME$/workspace/jinhui/Gogs/pointshub/app/views/mobGiftDetails.scala.html" timestamp="1514874618023">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="175" column="6" />
      </file>
      <file name="$USER_HOME$/workspace/jinhui/Gogs/pointshub/app/views/mobInvited.scala.html" timestamp="1514874646592">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="163" column="6" />
      </file>
      <file name="/HTML File.txt.ft" timestamp="1513836958436">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/workspace/jinhui/Gogs/online/pointshub/app/views/mobGetPrize.scala.html" timestamp="1514874604788">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="656" column="16" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="/ActionScript File Header.txt.ft" timestamp="1513836958521">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="/Dummy.txt" timestamp="1514875868521">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/workspace/jinhui/Gogs/pointshub/app/views/mobMessage.scala.html" timestamp="1514874659744">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="201" column="6" />
      </file>
      <file name="$USER_HOME$/workspace/jinhui/Gogs/online/pointshub/app/views/modGift.scala.html" timestamp="1514874684088">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="121" column="7" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="/mobCalls.scala.html" timestamp="1514874125981">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="1120" column="6" />
      </file>
      <file name="$USER_HOME$/workspace/demo/zest/src/main/java/jinhui/C.java" timestamp="1515060637590">
        <mark key="[" line="18" column="28" />
        <mark key="]" line="18" column="28" />
        <mark key="^" line="18" column="28" />
        <mark key="." line="18" column="28" />
      </file>
      <file name="$USER_HOME$/workspace/jinhui/Gogs/pointshub/app/views/modConfirm.scala.html" timestamp="1514874669214">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="303" column="6" />
      </file>
      <file name="$USER_HOME$/workspace/jinhui/Gogs/online/pointshub/app/views/mobIndex.scala.html" timestamp="1514874640974">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="93" column="7" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/workspace/jinhui/Gogs/pointshub/app/views/mobGetPrize.scala.html" timestamp="1514874597058">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="656" column="15" />
      </file>
      <file name="$USER_HOME$/workspace/jinhui/Gogs/pointshub/app/views/mobCalls.scala.html" timestamp="1514874580890">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="1120" column="6" />
      </file>
      <file name="$USER_HOME$/workspace/demo/zest/src/main/java/jinhui/_1大奖到小奖.java" timestamp="1515060688767">
        <mark key="[" line="106" column="69" />
        <mark key="]" line="106" column="74" />
        <mark key="." line="106" column="74" />
        <mark key="^" line="106" column="74" />
      </file>
      <file name="$USER_HOME$/workspace/jinhui/Gogs/online/pointshub/app/views/mobApps.scala.html" timestamp="1514874571932">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="116" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/workspace/jinhui/Gogs/pointshub/app/views/modGift.scala.html" timestamp="1514874679882">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="121" column="6" />
      </file>
      <file name="$USER_HOME$/workspace/jinhui/Gogs/online/pointshub/conf/application-context.xml" timestamp="1514876683074">
        <mark key="[" line="42" column="41" />
        <mark key="]" line="42" column="52" />
        <mark key="^" line="42" column="52" />
        <mark key="." line="42" column="52" />
      </file>
      <file name="/ScanController.java" timestamp="1514874142697">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="888" column="0" />
      </file>
      <file name="$USER_HOME$/workspace/jinhui/Gogs/online/pointshub/app/util/redpack/HttpUtil.java" timestamp="1514874220020">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="117" column="1" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/workspace/jinhui/Gogs/online/pointshub/app/views/mobCalls.scala.html" timestamp="1514874587364">
        <mark key="[" line="0" column="0" />
        <mark key="]" line="1120" column="7" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="/HttpUtil.java" timestamp="1514874213421">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="117" column="0" />
      </file>
    </filemarks>
    <jumps>
      <jump line="23" column="12" filename="$USER_HOME$/workspace/order-hongchuan/order-producer/public/statics/financeDetail.js" />
      <jump line="28" column="24" filename="$USER_HOME$/workspace/order-hongchuan/order-producer/public/statics/financeDetail.js" />
      <jump line="116" column="60" filename="$USER_HOME$/workspace/order-hongchuan/order-producer/public/statics/financeDetail.js" />
      <jump line="115" column="88" filename="$USER_HOME$/workspace/order-hongchuan/order-producer/public/statics/financeDetail.js" />
      <jump line="124" column="51" filename="$USER_HOME$/workspace/order-hongchuan/order-producer/public/statics/financeDetail.js" />
      <jump line="102" column="21" filename="$USER_HOME$/workspace/order-hongchuan/order-producer/public/statics/financeDetail.js" />
      <jump line="105" column="11" filename="$USER_HOME$/workspace/order-hongchuan/order-producer/public/statics/financeDetail.js" />
      <jump line="106" column="16" filename="$USER_HOME$/workspace/order-hongchuan/order-producer/public/statics/financeDetail.js" />
      <jump line="141" column="58" filename="$USER_HOME$/workspace/order-hongchuan/order-producer/public/statics/financeDetail.js" />
      <jump line="142" column="21" filename="$USER_HOME$/workspace/order-hongchuan/order-producer/public/statics/financeDetail.js" />
      <jump line="146" column="37" filename="$USER_HOME$/workspace/order-hongchuan/order-producer/public/statics/financeDetail.js" />
      <jump line="148" column="32" filename="$USER_HOME$/workspace/order-hongchuan/order-producer/public/statics/financeDetail.js" />
      <jump line="151" column="41" filename="$USER_HOME$/workspace/order-hongchuan/order-producer/public/statics/financeDetail.js" />
      <jump line="154" column="37" filename="$USER_HOME$/workspace/order-hongchuan/order-producer/public/statics/financeDetail.js" />
      <jump line="30" column="60" filename="$USER_HOME$/workspace/order-hongchuan/order-producer/public/statics/financeDetail.js" />
      <jump line="31" column="29" filename="$USER_HOME$/workspace/order-hongchuan/order-producer/public/statics/financeDetail.js" />
      <jump line="33" column="32" filename="$USER_HOME$/workspace/order-hongchuan/order-producer/public/statics/financeDetail.js" />
      <jump line="149" column="35" filename="$USER_HOME$/workspace/order-hongchuan/order-producer/public/statics/financeDetail.js" />
      <jump line="205" column="56" filename="$USER_HOME$/workspace/order-hongchuan/order-producer/app/service/impl/FinanceOrderServiceImpl.java" />
      <jump line="20" column="6" filename="$USER_HOME$/workspace/order-hongchuan/order-dealer/conf/routes" />
      <jump line="105" column="40" filename="$USER_HOME$/workspace/order-hongchuan/order-producer/conf/routes" />
      <jump line="163" column="4" filename="$USER_HOME$/workspace/order-hongchuan/order-producer/app/views/dealsum.scala.html" />
      <jump line="0" column="170" filename="$USER_HOME$/workspace/order-hongchuan/order-producer/app/views/dealsum.scala.html" />
      <jump line="27" column="8" filename="$USER_HOME$/workspace/order-hongchuan/order-producer/app/views/dealsum.scala.html" />
      <jump line="103" column="19" filename="$USER_HOME$/workspace/order-hongchuan/order-producer/app/views/dealsum.scala.html" />
      <jump line="104" column="12" filename="$USER_HOME$/workspace/order-hongchuan/order-producer/app/views/dealsum.scala.html" />
      <jump line="106" column="26" filename="$USER_HOME$/workspace/order-hongchuan/order-producer/app/views/dealsum.scala.html" />
      <jump line="108" column="168" filename="$USER_HOME$/workspace/order-hongchuan/order-producer/app/views/dealsum.scala.html" />
      <jump line="174" column="24" filename="$USER_HOME$/workspace/order-hongchuan/order-producer/app/views/dealsum.scala.html" />
      <jump line="175" column="32" filename="$USER_HOME$/workspace/order-hongchuan/order-producer/app/views/dealsum.scala.html" />
      <jump line="127" column="7" filename="$USER_HOME$/workspace/order-hongchuan/order-dealer/conf/routes" />
      <jump line="94" column="28" filename="$USER_HOME$/workspace/order-hongchuan/order-dealer/app/controllers/cart/CartController.java" />
      <jump line="90" column="26" filename="$USER_HOME$/workspace/order-hongchuan/order-dealer/app/controllers/cart/CartController.java" />
      <jump line="159" column="0" filename="$USER_HOME$/workspace/order-hongchuan/order-dealer/app/controllers/cart/CartController.java" />
      <jump line="16" column="0" filename="$APPLICATION_CONFIG_DIR$/idea.vmoptions" />
      <jump line="80" column="42" filename="$USER_HOME$/workspace/order-hongchuan/order-dealer/app/util/BankUtil.java" />
      <jump line="168" column="25" filename="$USER_HOME$/workspace/order-hongchuan/order-dealer/app/util/BankUtil.java" />
      <jump line="165" column="37" filename="$USER_HOME$/workspace/order-hongchuan/order-dealer/app/util/BankUtil.java" />
      <jump line="194" column="38" filename="$USER_HOME$/workspace/jinhui/Bitbucket/odealer_临时改动--区别动态流程分支/order-dealer/app/util/BankUtil.java" />
      <jump line="8" column="0" filename="$USER_HOME$/workspace/jinhui/Bitbucket/odealer_临时改动--区别动态流程分支/order-dealer/app/util/BankUtil.java" />
      <jump line="28" column="0" filename="$USER_HOME$/workspace/jinhui/Bitbucket/odealer_临时改动--区别动态流程分支/order-dealer/app/util/BankUtil.java" />
      <jump line="0" column="0" filename="$USER_HOME$/workspace/jinhui/Bitbucket/odealer_临时改动--区别动态流程分支/order-dealer/app/util/BankUtil.java" />
      <jump line="275" column="0" filename="$USER_HOME$/workspace/jinhui/Bitbucket/odealer_临时改动--区别动态流程分支/order-dealer/app/util/BankUtil.java" />
      <jump line="81" column="38" filename="$USER_HOME$/workspace/jinhui/Bitbucket/order-dealer/conf/routes" />
      <jump line="22" column="22" filename="$USER_HOME$/workspace/jinhui/Gogs/pointshub/app/views/eventList.scala.html" />
      <jump line="1" column="0" filename="$USER_HOME$/workspace/jinhui/Gogs/pointshub/app/views/eventList.scala.html" />
      <jump line="91" column="0" filename="$USER_HOME$/workspace/jinhui/Gogs/pointshub/app/views/eventList.scala.html" />
      <jump line="340" column="35" filename="$USER_HOME$/workspace/jinhui/Gogs/pointshub/conf/routes" />
      <jump line="0" column="0" filename="$USER_HOME$/workspace/jinhui/Gogs/pointshub/app/controllers/console/LoginController.java" />
      <jump line="13" column="19" filename="/mobCalls.scala.html" />
      <jump line="20" column="30" filename="/mobCalls.scala.html" />
      <jump line="625" column="73" filename="$USER_HOME$/workspace/jinhui/Gogs/online/pointshub/app/views/mobCalls.scala.html" />
      <jump line="18" column="41" filename="$USER_HOME$/workspace/jinhui/Gogs/online/pointshub/app/views/mobCalls.scala.html" />
      <jump line="585" column="36" filename="/mobCalls.scala.html" />
      <jump line="0" column="0" filename="/mobCalls.scala.html" />
      <jump line="32" column="35" filename="$USER_HOME$/workspace/jinhui/Gogs/online/pointshub/app/views/mobCalls.scala.html" />
      <jump line="1" column="0" filename="$USER_HOME$/workspace/jinhui/Gogs/online/pointshub/app/views/mobCalls.scala.html" />
      <jump line="445" column="0" filename="/ScanController.java" />
      <jump line="0" column="0" filename="/ScanController.java" />
      <jump line="617" column="16" filename="$USER_HOME$/workspace/jinhui/Gogs/pointshub/app/controllers/ScanController.java" />
      <jump line="0" column="0" filename="$USER_HOME$/workspace/jinhui/Gogs/online/pointshub/app/controllers/ScanController.java" />
      <jump line="1" column="0" filename="$USER_HOME$/workspace/jinhui/Gogs/online/pointshub/app/controllers/ScanController.java" />
      <jump line="219" column="55" filename="$USER_HOME$/workspace/jinhui/Gogs/online/pointshub/app/controllers/ScanController.java" />
      <jump line="220" column="27" filename="$USER_HOME$/workspace/jinhui/Gogs/online/pointshub/app/controllers/ScanController.java" />
      <jump line="243" column="34" filename="$USER_HOME$/workspace/jinhui/Gogs/online/pointshub/app/controllers/ScanController.java" />
      <jump line="271" column="15" filename="$USER_HOME$/workspace/jinhui/Gogs/online/pointshub/app/controllers/ScanController.java" />
      <jump line="372" column="20" filename="$USER_HOME$/workspace/jinhui/Gogs/online/pointshub/app/controllers/ScanController.java" />
      <jump line="22" column="26" filename="/HttpUtil.java" />
      <jump line="0" column="0" filename="/HttpUtil.java" />
      <jump line="0" column="0" filename="$USER_HOME$/workspace/jinhui/Gogs/online/pointshub/app/util/redpack/HttpUtil.java" />
      <jump line="12" column="44" filename="$USER_HOME$/workspace/jinhui/Gogs/pointshub/app/views/mobApps.scala.html" />
      <jump line="0" column="0" filename="$USER_HOME$/workspace/jinhui/Gogs/pointshub/app/views/mobApps.scala.html" />
      <jump line="0" column="0" filename="$USER_HOME$/workspace/jinhui/Gogs/online/pointshub/app/views/mobApps.scala.html" />
      <jump line="691" column="83" filename="$USER_HOME$/workspace/jinhui/Gogs/pointshub/app/views/mobCalls.scala.html" />
      <jump line="0" column="0" filename="$USER_HOME$/workspace/jinhui/Gogs/pointshub/app/views/mobCalls.scala.html" />
      <jump line="541" column="34" filename="$USER_HOME$/workspace/jinhui/Gogs/online/pointshub/app/views/mobCalls.scala.html" />
      <jump line="0" column="0" filename="$USER_HOME$/workspace/jinhui/Gogs/online/pointshub/app/views/mobCalls.scala.html" />
      <jump line="4" column="22" filename="$USER_HOME$/workspace/jinhui/Gogs/pointshub/app/views/mobGetPrize.scala.html" />
      <jump line="0" column="0" filename="$USER_HOME$/workspace/jinhui/Gogs/pointshub/app/views/mobGetPrize.scala.html" />
      <jump line="0" column="0" filename="$USER_HOME$/workspace/jinhui/Gogs/online/pointshub/app/views/mobGetPrize.scala.html" />
      <jump line="90" column="17" filename="$USER_HOME$/workspace/jinhui/Gogs/pointshub/app/views/mobGiftDetails.scala.html" />
      <jump line="0" column="0" filename="$USER_HOME$/workspace/jinhui/Gogs/pointshub/app/views/mobGiftDetails.scala.html" />
      <jump line="0" column="0" filename="$USER_HOME$/workspace/jinhui/Gogs/online/pointshub/app/views/mobGiftDetails.scala.html" />
      <jump line="48" column="5" filename="$USER_HOME$/workspace/jinhui/Gogs/pointshub/app/views/mobIndex.scala.html" />
      <jump line="0" column="0" filename="$USER_HOME$/workspace/jinhui/Gogs/pointshub/app/views/mobIndex.scala.html" />
      <jump line="0" column="0" filename="$USER_HOME$/workspace/jinhui/Gogs/online/pointshub/app/views/mobIndex.scala.html" />
      <jump line="105" column="49" filename="$USER_HOME$/workspace/jinhui/Gogs/pointshub/app/views/mobInvited.scala.html" />
      <jump line="0" column="0" filename="$USER_HOME$/workspace/jinhui/Gogs/pointshub/app/views/mobInvited.scala.html" />
      <jump line="0" column="0" filename="$USER_HOME$/workspace/jinhui/Gogs/online/pointshub/app/views/mobInvited.scala.html" />
      <jump line="132" column="36" filename="$USER_HOME$/workspace/jinhui/Gogs/pointshub/app/views/mobMessage.scala.html" />
      <jump line="0" column="0" filename="$USER_HOME$/workspace/jinhui/Gogs/pointshub/app/views/mobMessage.scala.html" />
      <jump line="0" column="0" filename="$USER_HOME$/workspace/jinhui/Gogs/online/pointshub/app/views/mobMessage.scala.html" />
      <jump line="90" column="38" filename="$USER_HOME$/workspace/jinhui/Gogs/pointshub/app/views/modConfirm.scala.html" />
      <jump line="0" column="0" filename="$USER_HOME$/workspace/jinhui/Gogs/pointshub/app/views/modConfirm.scala.html" />
      <jump line="0" column="0" filename="$USER_HOME$/workspace/jinhui/Gogs/online/pointshub/app/views/modConfirm.scala.html" />
      <jump line="85" column="26" filename="$USER_HOME$/workspace/jinhui/Gogs/pointshub/app/views/modGift.scala.html" />
      <jump line="0" column="0" filename="$USER_HOME$/workspace/jinhui/Gogs/pointshub/app/views/modGift.scala.html" />
      <jump line="0" column="0" filename="$USER_HOME$/workspace/jinhui/Gogs/online/pointshub/app/views/modGift.scala.html" />
      <jump line="25" column="14" filename="$USER_HOME$/workspace/jinhui/Gogs/online/pointshub/conf/application.conf" />
      <jump line="62" column="0" filename="$USER_HOME$/workspace/jinhui/Gogs/online/pointshub/conf/application.conf" />
    </jumps>
    <registers>
      <register name="&quot;" type="4">
        <text>基本废物......</text>
      </register>
      <register name="*" type="4">
        <text>&quot;&quot;</text>
      </register>
      <register name="-" type="4">
        <text encoding="base64">ID0=</text>
      </register>
      <register name="/" type="4">
        <text>veri</text>
      </register>
      <register name="0" type="2">
        <text encoding="base64">QChjb21wOkNvbXBhbnksZ2lmdHM6IExpc3RbR2lmdF0sbWU6VXNlcixydWxlOkludGVnZXIpCjwhRE9DVFlQRSBodG1sPgo8aHRtbD4KICAgIDxoZWFkPgogICAgICAgIDxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04IiAvPgogICAgICAgIDxtZXRhIG5hbWU9InJlbmRlcmVyIiBjb250ZW50PSJ3ZWJraXQiPgogICAgICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MSI+CiAgICAgICAgPGxpbmsgaHJlZj0iL2Fzc2V0cy9AY29tcC5kb21haW4vY3NzL2Jvb3RzdHJhcC5taW4uY3NzIiByZWw9InN0eWxlc2hlZXQiIG1lZGlhPSJzY3JlZW4iPgogICAgICAgIDxsaW5rIGhyZWY9Ii9hc3NldHMvc3R5bGVzaGVldHMvbWFpbi5jc3MiIHJlbD0ic3R5bGVzaGVldCI+CgogICAgICAgIDxsaW5rIGhyZWY9Ii9hc3NldHMvQGNvbXAuZG9tYWluL2Nzcy9jc3NfdWVkLmNzcyIgcmVsPSJzdHlsZXNoZWV0Ij4KICAgICAgICA8c2NyaXB0IHNyYz0iL2Fzc2V0cy9qYXZhc2NyaXB0cy9qcXVlcnktMS45LjAubWluLmpzIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvc2NyaXB0PgogICAgICAgIDxzY3JpcHQgc3JjPSIvYXNzZXRzL2phdmFzY3JpcHRzL2Jvb3RzdHJhcC5taW4uanMiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+CiAgICAgICAgPHN0eWxlPgogICAgICAgICAgICAuY29udGFpbmVye3BhZGRpbmc6MH0KICAgICAgICAgICAgLm5hdmJhci1kZWZhdWx0ewogICAgICAgICAgICBiYWNrZ3JvdW5kOiMwNzg3MDA7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLm5hdmJhci1kZWZhdWx0IC5uYXZiYXItYnJhbmR7CiAgICAgICAgICAgIGNvbG9yOiNmNmY2ZjY7CiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OmJvbGQ7CiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OjEuNDI4NTcxNDM7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLm5hdmJhci1kZWZhdWx0IC5uYXZiYXItYnJhbmQ6aG92ZXJ7CiAgICAgICAgICAgIGNvbG9yOiNmZmZmZmY7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC5uYXZiYXItZGVmYXVsdCAubmF2YmFyLW5hdiBsaSBhewogICAgICAgICAgICAgICAgY29sb3I6I2Y2ZjZmNjsKICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OmJvbGQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLm5hdmJhci1kZWZhdWx0IC5uYXZiYXItbmF2IGxpIGE6aG92ZXJ7CiAgICAgICAgICAgICAgICBjb2xvcjojZmZmZmZmOwogICAgICAgICAgICB9CgogICAgICAgICAgICAubmF2YmFyLWRlZmF1bHQgLm5hdmJhci10b2dnbGU6aG92ZXIsIC5uYXZiYXItZGVmYXVsdCAubmF2YmFyLXRvZ2dsZTpmb2N1c3sKICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6I2ZmZjsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLm5hdmJhci1kZWZhdWx0IC5uYXZiYXItdG9nZ2xlIC5pY29uLWJhcnsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6I2ZmZjsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLm5hdmJhci1kZWZhdWx0IC5uYXZiYXItdG9nZ2xlOmhvdmVyIC5pY29uLWJhciwubmF2YmFyLWRlZmF1bHQgLm5hdmJhci10b2dnbGU6Zm9jdXMgLmljb24tYmFyewogICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiMwNzg3MDA7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC5idG4tamluaHVpewogICAgICAgICAgICBjb2xvcjogI2Y2ZjZmNjsKICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzA3ODcwMDsKICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiAjMzk4NDM5OwogICAgICAgICAgICBmb250LXdlaWdodDpib2xkOwogICAgICAgICAgICBmb250LXNpemU6MTJweDsKICAgICAgICAgICAgfQogICAgICAgICAgICAuYnRuLWppbmh1aTpob3ZlcnsKICAgICAgICAgICAgY29sb3I6ICNmZmY7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLnBhZ2UtaGVhZGVyewogICAgICAgICAgICBtYXJnaW4tdG9wOjBweDsKICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICA8L3N0eWxlPgoKICAgICAgICA8IS0tW2lmIElFXT48IS0tPgogICAgICAgIDxsaW5rIGhyZWY9Ii9hc3NldHMvc3R5bGVzaGVldHMvYm9vdHN0cmFwLWllNy5jc3MiIHJlbD0ic3R5bGVzaGVldCI+CiAgICAgICAgPHNjcmlwdCBzcmM9Ii9hc3NldHMvamF2YXNjcmlwdHMvcmVzcG9uZC5taW4uanMiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+CiAgICA8L2hlYWQ+CiAgICA8Ym9keSBzdHlsZT0iYmFja2dyb3VuZDp1cmwoL2Fzc2V0cy9pbWFnZXMvdXNlcl9iZy5wbmcpIGxlZnQgdG9wO3BhZGRpbmctdG9wOjcwcHg7Ij4KICAgICAgICA8bmF2IGNsYXNzPSJuYXZiYXIgbmF2YmFyLWRlZmF1bHQgbmF2YmFyLWZpeGVkLXRvcCIgcm9sZT0ibmF2aWdhdGlvbiI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lci1mbHVpZCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im5hdmJhci1oZWFkZXIiPgogICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJuYXZiYXItdG9nZ2xlIGNvbGxhcHNlZCIgZGF0YS10b2dnbGU9ImNvbGxhcHNlIiBkYXRhLXRhcmdldD0iI2JzLWV4YW1wbGUtbmF2YmFyLWNvbGxhcHNlLTEiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzci1vbmx5Ij5Ub2dnbGUgbmF2aWdhdGlvbjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1iYXIiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1iYXIiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1iYXIiPjwvc3Bhbj4KICAgICAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgICAgICAgPGEgY2xhc3M9Im5hdmJhci1icmFuZCBwdWxsLWxlZnQiIGhyZWY9Ii9zaXRlL0Bjb21wLmRvbWFpbiI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImdseXBoaWNvbiBnbHlwaGljb24tY2lyY2xlLWFycm93LWxlZnQiPjwvc3Bhbj4KICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJuYXZiYXItYnJhbmQiPumHkeW+vemFkuenr+WIhuWVhuWfjjwvc3Bhbj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbGxhcHNlIG5hdmJhci1jb2xsYXBzZSIgaWQ9ImJzLWV4YW1wbGUtbmF2YmFyLWNvbGxhcHNlLTEiPgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJuYXYgbmF2YmFyLW5hdiI+CiAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9zaXRlL0Bjb21wLmRvbWFpbi9ldmVudCI+5LqS5Yqo5oq95aWWPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgQCo8bGk+PGEgaHJlZj0iL3NpdGUvQGNvbXAuZG9tYWluL2dpdmVQb2ludHNWaWV3Ij7np6/liIbkupLotaA8L2E+PC9saT4qQAogICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvc2l0ZS9AY29tcC5kb21haW4vcGVvcGxlIj7kuKrkurrkuK3lv4M8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3NpdGUvQGNvbXAuZG9tYWluL21lc3NhZ2UvMC81Ij7kvJrlkZjnlZnoqIA8L2E+PC9saT4KICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L25hdj4KICAgICAgICA8ZGl2IGFsaWduPSJjZW50ZXIiIHN0eWxlPSJtYXJnaW4tYm90dG9tOjEwcHg7Ij4KICAgICAgICAgICAgPGg1IHN0eWxlPSJmb250LXdlaWdodDogYm9sZDsiPuekvOWTgeWIl+ihqDwvaDU+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLXhzLTEyIj4KICAgICAgICAgICAgICAKICAgIDx1bCBjbGFzcz0idGV4dC1jZW50ZXIiIHN0eWxlPSJwYWRkaW5nLWxlZnQ6MCI+CiAgICAgICAgQGZvcihwIDwtIGdpZnRzKXsKICAgICAgICA8bGkgY2xhc3M9ImNvbC14cy02IGNvbC1zbS00IiA+CiAgICAgICAgICAgIDxhIGNsYXNzPSJ0aHVtYm5haWwgYnRuIiBocmVmPSIvc2l0ZS9AY29tcC5kb21haW4vZ2lmdC9AcC5pZCI+CiAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJidG4gaW1nLXJvdW5kZWQiICBzcmM9IkBwLmltYWdlIiBzdHlsZT0iaGVpZ2h0OiAxMjVweDt3aWR0aDogMTI1cHg7Ii8+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXB0aW9uIHB1bGwtbGVmdCI+CiAgICAgICAgICAgICAgICAgICAgPHAgdGl0bGU9IkBwLmdpZnROYW1lIj4gCiAgICAgICAgICAgICAgICAgICAgQGlmKHAuZ2lmdE5hbWUubGVuZ3RoID4gNil7CiAgICAgICAgICAgICAgICAgICAgICAgIEBwLmdpZnROYW1lLnN1YnN0cmluZygwLDYpIC4uLgogICAgICAgICAgICAgICAgICAgIH1lbHNlewogICAgICAgICAgICAgICAgICAgICAgIEBwLmdpZnROYW1lCiAgICAgICAgICAgICAgICAgICAgfSAgCiAgICAgICAgICAgICAgICAgICAgQGlmKC0xPT1wLnBvaW50c1dvcnRoKXsKICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYmFkZ2UiPkAocC5wcmljZSpydWxlKTwvc3Bhbj4gPC9wPgogICAgICAgICAgICAgICAgICAgIH1lbHNlewogICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYmFkZ2UiPkBwLnBvaW50c1dvcnRoPC9zcGFuPiA8L3A+CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvYT4KICAgICAgICA8L2xpPgogICAgICAgIH0KICAgIDwvdWw+CiAgICAgICAgPC9kaXY+CiAgICA8L2JvZHk+CjwvaHRtbD4K</text>
      </register>
      <register name="1" type="2">
        <text encoding="base64">ICAgICAgICAgICAgICAgICAgICBib3R0bGUucXIK</text>
      </register>
      <register name="2" type="2">
        <text encoding="base64">QChjb21wOkNvbXBhbnksZ2lmdHM6IExpc3RbR2lmdF0sbWU6VXNlcixydWxlOkludGVnZXIpCjwhRE9DVFlQRSBodG1sPgo8aHRtbD4KICAgIDxoZWFkPgogICAgICAgIDxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04IiAvPgogICAgICAgIDxtZXRhIG5hbWU9InJlbmRlcmVyIiBjb250ZW50PSJ3ZWJraXQiPgogICAgICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MSI+CiAgICAgICAgPGxpbmsgaHJlZj0iL2Fzc2V0cy9AY29tcC5kb21haW4vY3NzL2Jvb3RzdHJhcC5taW4uY3NzIiByZWw9InN0eWxlc2hlZXQiIG1lZGlhPSJzY3JlZW4iPgogICAgICAgIDxsaW5rIGhyZWY9Ii9hc3NldHMvc3R5bGVzaGVldHMvbWFpbi5jc3MiIHJlbD0ic3R5bGVzaGVldCI+CgogICAgICAgIDxsaW5rIGhyZWY9Ii9hc3NldHMvQGNvbXAuZG9tYWluL2Nzcy9jc3NfdWVkLmNzcyIgcmVsPSJzdHlsZXNoZWV0Ij4KICAgICAgICA8c2NyaXB0IHNyYz0iL2Fzc2V0cy9qYXZhc2NyaXB0cy9qcXVlcnktMS45LjAubWluLmpzIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvc2NyaXB0PgogICAgICAgIDxzY3JpcHQgc3JjPSIvYXNzZXRzL2phdmFzY3JpcHRzL2Jvb3RzdHJhcC5taW4uanMiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+CiAgICAgICAgPHN0eWxlPgogICAgICAgICAgICAuY29udGFpbmVye3BhZGRpbmc6MH0KICAgICAgICAgICAgLm5hdmJhci1kZWZhdWx0ewogICAgICAgICAgICBiYWNrZ3JvdW5kOiMwNzg3MDA7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLm5hdmJhci1kZWZhdWx0IC5uYXZiYXItYnJhbmR7CiAgICAgICAgICAgIGNvbG9yOiNmNmY2ZjY7CiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OmJvbGQ7CiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OjEuNDI4NTcxNDM7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLm5hdmJhci1kZWZhdWx0IC5uYXZiYXItYnJhbmQ6aG92ZXJ7CiAgICAgICAgICAgIGNvbG9yOiNmZmZmZmY7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC5uYXZiYXItZGVmYXVsdCAubmF2YmFyLW5hdiBsaSBhewogICAgICAgICAgICAgICAgY29sb3I6I2Y2ZjZmNjsKICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OmJvbGQ7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLm5hdmJhci1kZWZhdWx0IC5uYXZiYXItbmF2IGxpIGE6aG92ZXJ7CiAgICAgICAgICAgICAgICBjb2xvcjojZmZmZmZmOwogICAgICAgICAgICB9CgogICAgICAgICAgICAubmF2YmFyLWRlZmF1bHQgLm5hdmJhci10b2dnbGU6aG92ZXIsIC5uYXZiYXItZGVmYXVsdCAubmF2YmFyLXRvZ2dsZTpmb2N1c3sKICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6I2ZmZjsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLm5hdmJhci1kZWZhdWx0IC5uYXZiYXItdG9nZ2xlIC5pY29uLWJhcnsKICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6I2ZmZjsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgLm5hdmJhci1kZWZhdWx0IC5uYXZiYXItdG9nZ2xlOmhvdmVyIC5pY29uLWJhciwubmF2YmFyLWRlZmF1bHQgLm5hdmJhci10b2dnbGU6Zm9jdXMgLmljb24tYmFyewogICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiMwNzg3MDA7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC5idG4tamluaHVpewogICAgICAgICAgICBjb2xvcjogI2Y2ZjZmNjsKICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzA3ODcwMDsKICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiAjMzk4NDM5OwogICAgICAgICAgICBmb250LXdlaWdodDpib2xkOwogICAgICAgICAgICBmb250LXNpemU6MTJweDsKICAgICAgICAgICAgfQogICAgICAgICAgICAuYnRuLWppbmh1aTpob3ZlcnsKICAgICAgICAgICAgY29sb3I6ICNmZmY7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLnBhZ2UtaGVhZGVyewogICAgICAgICAgICBtYXJnaW4tdG9wOjBweDsKICAgICAgICAgICAgfQogICAgICAgICAgICAKICAgICAgICA8L3N0eWxlPgoKICAgICAgICA8IS0tW2lmIElFXT48IS0tPgogICAgICAgIDxsaW5rIGhyZWY9Ii9hc3NldHMvc3R5bGVzaGVldHMvYm9vdHN0cmFwLWllNy5jc3MiIHJlbD0ic3R5bGVzaGVldCI+CiAgICAgICAgPHNjcmlwdCBzcmM9Ii9hc3NldHMvamF2YXNjcmlwdHMvcmVzcG9uZC5taW4uanMiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+CiAgICA8L2hlYWQ+CiAgICA8Ym9keSBzdHlsZT0iYmFja2dyb3VuZDp1cmwoL2Fzc2V0cy9pbWFnZXMvdXNlcl9iZy5wbmcpIGxlZnQgdG9wO3BhZGRpbmctdG9wOjcwcHg7Ij4KICAgICAgICA8bmF2IGNsYXNzPSJuYXZiYXIgbmF2YmFyLWRlZmF1bHQgbmF2YmFyLWZpeGVkLXRvcCIgcm9sZT0ibmF2aWdhdGlvbiI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lci1mbHVpZCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im5hdmJhci1oZWFkZXIiPgogICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJuYXZiYXItdG9nZ2xlIGNvbGxhcHNlZCIgZGF0YS10b2dnbGU9ImNvbGxhcHNlIiBkYXRhLXRhcmdldD0iI2JzLWV4YW1wbGUtbmF2YmFyLWNvbGxhcHNlLTEiPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzci1vbmx5Ij5Ub2dnbGUgbmF2aWdhdGlvbjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1iYXIiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1iYXIiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1iYXIiPjwvc3Bhbj4KICAgICAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgICAgICAgPGEgY2xhc3M9Im5hdmJhci1icmFuZCBwdWxsLWxlZnQiIGhyZWY9Ii9zaXRlL0Bjb21wLmRvbWFpbiI+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImdseXBoaWNvbiBnbHlwaGljb24tY2lyY2xlLWFycm93LWxlZnQiPjwvc3Bhbj4KICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJuYXZiYXItYnJhbmQiPumHkeW+vemFkuenr+WIhuWVhuWfjjwvc3Bhbj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbGxhcHNlIG5hdmJhci1jb2xsYXBzZSIgaWQ9ImJzLWV4YW1wbGUtbmF2YmFyLWNvbGxhcHNlLTEiPgogICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJuYXYgbmF2YmFyLW5hdiI+CiAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9zaXRlL0Bjb21wLmRvbWFpbi9ldmVudCI+5LqS5Yqo5oq95aWWPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9zaXRlL0Bjb21wLmRvbWFpbi9naXZlUG9pbnRzVmlldyI+56ev5YiG5LqS6LWgPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9zaXRlL0Bjb21wLmRvbWFpbi9wZW9wbGUiPuS4quS6uuS4reW/gzwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvc2l0ZS9AY29tcC5kb21haW4vbWVzc2FnZS8wLzUiPuS8muWRmOeVmeiogDwvYT48L2xpPgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvbmF2PgogICAgICAgIDxkaXYgYWxpZ249ImNlbnRlciIgc3R5bGU9Im1hcmdpbi1ib3R0b206MTBweDsiPgogICAgICAgICAgICA8aDUgc3R5bGU9ImZvbnQtd2VpZ2h0OiBib2xkOyI+56S85ZOB5YiX6KGoPC9oNT4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wteHMtMTIiPgogICAgICAgICAgICAgIAogICAgPHVsIGNsYXNzPSJ0ZXh0LWNlbnRlciIgc3R5bGU9InBhZGRpbmctbGVmdDowIj4KICAgICAgICBAZm9yKHAgPC0gZ2lmdHMpewogICAgICAgIDxsaSBjbGFzcz0iY29sLXhzLTYgY29sLXNtLTQiID4KICAgICAgICAgICAgPGEgY2xhc3M9InRodW1ibmFpbCBidG4iIGhyZWY9Ii9zaXRlL0Bjb21wLmRvbWFpbi9naWZ0L0BwLmlkIj4KICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImJ0biBpbWctcm91bmRlZCIgIHNyYz0iQHAuaW1hZ2UiIHN0eWxlPSJoZWlnaHQ6IDEyNXB4O3dpZHRoOiAxMjVweDsiLz4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcHRpb24gcHVsbC1sZWZ0Ij4KICAgICAgICAgICAgICAgICAgICA8cCB0aXRsZT0iQHAuZ2lmdE5hbWUiPiAKICAgICAgICAgICAgICAgICAgICBAaWYocC5naWZ0TmFtZS5sZW5ndGggPiA2KXsKICAgICAgICAgICAgICAgICAgICAgICAgQHAuZ2lmdE5hbWUuc3Vic3RyaW5nKDAsNikgLi4uCiAgICAgICAgICAgICAgICAgICAgfWVsc2V7CiAgICAgICAgICAgICAgICAgICAgICAgQHAuZ2lmdE5hbWUKICAgICAgICAgICAgICAgICAgICB9ICAKICAgICAgICAgICAgICAgICAgICBAaWYoLTE9PXAucG9pbnRzV29ydGgpewogICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJiYWRnZSI+QChwLnByaWNlKnJ1bGUpPC9zcGFuPiA8L3A+CiAgICAgICAgICAgICAgICAgICAgfWVsc2V7CiAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJiYWRnZSI+QHAucG9pbnRzV29ydGg8L3NwYW4+IDwvcD4KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9hPgogICAgICAgIDwvbGk+CiAgICAgICAgfQogICAgPC91bD4KICAgICAgICA8L2Rpdj4KICAgIDwvYm9keT4KPC9odG1sPgo=</text>
      </register>
      <register name="3" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="4" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="5" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="6" type="2">
        <text encoding="base64">QChjb21wOkNvbXBhbnksZ2lmdHM6IExpc3RbR2lmdF0sdHlwZXM6TGlzdFtHaWZ0VHlwZV0sbWU6VXNlcixwb2ludExldmVsOlBvaW50c0xldmVsKQo8IURPQ1RZUEUgaHRtbCBQVUJMSUMgIi0vL1czQy8vRFREIFhIVE1MIDEuMCBUcmFuc2l0aW9uYWwvL0VOIiAiaHR0cDovL3d3dy53My5vcmcvVFIveGh0bWwxL0RURC94aHRtbDEtdHJhbnNpdGlvbmFsLmR0ZCI+CjxodG1sIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIj4KPGhlYWQ+CiAgPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCxoZWlnaHQ9ZGV2aWNlLWhlaWdodCxpbml0YWwtc2NhbGU9MS4wLG1heGltdW0tc2NhbGU9MS4wLHVzZXItc2NhbGFibGU9bm87Ii8+CjxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04IiAvPgo8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoIiAvPgo8bGluayBocmVmPSIvYXNzZXRzL0Bjb21wLmRvbWFpbi9jc3MvYm9vdHN0cmFwLm1pbi5jc3MiIHJlbD0ic3R5bGVzaGVldCIvPgo8dGl0bGU+56ev5YiG5omL5py66aaW6aG1PC90aXRsZT4KPHNjcmlwdCBzcmM9Ii9hc3NldHMvamF2YXNjcmlwdHMvanF1ZXJ5LTEuOS4wLm1pbi5qcyIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48L3NjcmlwdD4KPHNjcmlwdCBzcmM9Ii9hc3NldHMvamF2YXNjcmlwdHMvYm9vdHN0cmFwLm1pbi5qcyIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48L3NjcmlwdD4KPHN0eWxlPgpodG1sLGJvZHl7d2lkdGg6MTAwJTtoZWlnaHQ6YXV0bzt9Cip7cGFkZGluZzowcHg7IG1hcmdpbjowcHg7Ki90ZXh0LWRlY29yYXRpb246bm9uZTt9CmF7dGV4dC1kZWNvcmF0aW9uOm5vbmU7fQppbWd7Ym9yZGVyOjA7IG1heC13aWR0aDoxMDAlfQpib2R5e2JhY2tncm91bmQ6dXJsKC9hc3NldHMvaW1hZ2VzL3hjX2JqLmpwZykgbm8tcmVwZWF0IHRvcCBjZW50ZXIgIzBmMzUxYzsgICBiYWNrZ3JvdW5kLXNpemU6MTAwJSBhdXRvOyB3aWR0aDoxMDAlOyBoZWlnaHQ6MTAwJTsgfQouaW5kZXhCdG57CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7Cn0KLmluZGV4QnRuIGF7CiAgICBjb2xvcjojZmZmOyBmb250LXNpemU6MTRweDsgZm9udC1mYW1pbHk6IuW+rui9r+mbhem7kSI7dGV4dC1hbGlnbjpjZW50ZXI7Cn0KICAgIC5tZW51e30KICAgIC5tZW51ICBheyBjb2xvcjojZmZmOyBmb250LXNpemU6MThweDsgZm9udC1mYW1pbHk6IuW+rui9r+mbhem7kSI7IGRpc3BsYXk6YmxvY2s7d2lkdGg6MTAwJTtoZWlnaHQ6NjBweDsgbGluZS1oZWlnaHQ6NjBweDsgYmFja2dyb3VuZC1jb2xvcjojMmYyZTJlO3RleHQtYWxpZ246IGNlbnRlcjt9Cjwvc3R5bGU+CjwvaGVhZD4KPGJvZHk+Cgo8ZGl2IHN0eWxlPSJtYXJnaW4tYm90dG9tOjIwcHg7Ij4KICAgIDxhIGhyZWY9Ii9zaXRlL0Bjb21wLmRvbWFpbi9ldmVudCI+CiAgICAgICAgPGltZyBzcmM9Ii9hc3NldHMvaW1hZ2VzL21vYmluZGV4ZXZlbnQuanBnIiBhbHQ9IueCueWHu+aKveWkp+WlliIgd2lkdGg9IjEwMCUiLz4KICAgIDwvYT4KPC9kaXY+CgoKPHNjcmlwdD53aW5kb3cuX2JkX3NoYXJlX2NvbmZpZz17ImNvbW1vbiI6eyJiZFNuc0tleSI6e30sImJkVGV4dCI6Iuenr+WIhuWVhuWfjuacieWlveekvO+8jOWkp+WutuW/q+adpeeci++8gSIsImJkTWluaSI6IjIiLCJiZE1pbmlMaXN0IjpmYWxzZSwiYmRQaWMiOiIiLCJiZFN0eWxlIjoiMCIsImJkU2l6ZSI6IjMyIn0sInNoYXJlIjp7fX07d2l0aChkb2N1bWVudCkwWyhnZXRFbGVtZW50c0J5VGFnTmFtZSgnaGVhZCcpWzBdfHxib2R5KS5hcHBlbmRDaGlsZChjcmVhdGVFbGVtZW50KCdzY3JpcHQnKSkuc3JjPSdodHRwOi8vYmRpbWcuc2hhcmUuYmFpZHUuY29tL3N0YXRpYy9hcGkvanMvc2hhcmUuanM/dj04OTg2MDU5My5qcz9jZG52ZXJzaW9uPScrfigtbmV3IERhdGUoKS8zNmU1KV07PC9zY3JpcHQ+Cgo8ZGl2IGNsYXNzPSJyb3cgaW5kZXhCdG4iPgogICAgPGRpdiBjbGFzcz0iY29sLXhzLW9mZnNldC0xIGNvbC14cy0zIGNvbC1zbS1vZmZzZXQtMSBjb2wtc20tMyI+CiAgICAgIDxhIGhyZWY9Ii9zaXRlL0Bjb21wLmRvbWFpbi9ldmVudCI+CiAgICAgICAgPGltZyBzcmM9Ii9hc3NldHMvaW1hZ2VzL2x3LnBuZyIvPjxici8+CiAgICAgICAg5LqS5Yqo5oq95aWWCiAgICAgIDwvYT4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iY29sLXhzLTMgY29sLXNtLTMiPjxhIGhyZWY9Ii9zaXRlL0Bjb21wLmRvbWFpbi9xdWVyeUdpZnRzLzAvMCI+PGltZyBzcmM9Ii9hc3NldHMvaW1hZ2VzL3plbmcucG5nIi8+PGJyLz7np6/liIblhZHmjaI8L2E+PC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJjb2wteHMtNSBjb2wtc20tNSI+PC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJjbGVhciI+PC9kaXY+CjwvZGl2Pgo8ZGl2IGNsYXNzPSJyb3cgaW5kZXhCdG4iIHN0eWxlPSJtYXJnaW4tYm90dG9tOjcwcHg7Ij4KICAgIDxkaXYgY2xhc3M9ImNvbC14cy1vZmZzZXQtMSBjb2wteHMtMyBjb2wtc20tb2Zmc2V0LTEgY29sLXNtLTMiPgogICAgPGEgaHJlZj0iL3NpdGUvQGNvbXAuZG9tYWluL2ludml0ZWQiPgogICAgPGltZyBzcmM9Ii9hc3NldHMvaW1hZ2VzL3RqLnBuZyIvPjxici8+6YKA6K+35aW95Y+LPC9hPjwvZGl2PgogICAgPGRpdiBjbGFzcz0iY29sLXhzLTMgY29sLXNtLTMiPjxhIGhyZWY9IiMiIGRhdGEtdG9nZ2xlPSJtb2RhbCIgZGF0YS10YXJnZXQ9IiNteU1vZGFsIj48aW1nIHNyYz0iL2Fzc2V0cy9pbWFnZXMvZngucG5nIi8+PGJyLz7lvq7liIbkuqs8L2E+PC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJjb2wteHMtNSBjb2wtc20tNSI+PC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJjbGVhciI+PC9kaXY+CjwvZGl2PgoKPG5hdiBjbGFzcz0ibmF2YmFyICBuYXZiYXItZml4ZWQtYm90dG9tIG1lbnUiIHJvbGU9Im5hdmlnYXRpb24iPgogICAgPGRpdiBjbGFzcz0iY29sLXhzLTMiIHN0eWxlPSJwYWRkaW5nLWxlZnQ6MHB4O3BhZGRpbmctcmlnaHQ6MHB4OyI+CiAgICAgICAgPGEgaHJlZj0iL3NpdGUvQGNvbXAuZG9tYWluIj7pppYmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDvpobU8L2E+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9ImNvbC14cy0zIiAgc3R5bGU9InBhZGRpbmctbGVmdDowcHg7cGFkZGluZy1yaWdodDowcHg7Ij4KICAgICAgICA8YSBocmVmPSIvc2l0ZS9AY29tcC5kb21haW4vcXVlcnlHaWZ0cy8wLzAiPuenr+WIhuWVhuWfjjwvYT4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iY29sLXhzLTMiICBzdHlsZT0icGFkZGluZy1sZWZ0OjBweDtwYWRkaW5nLXJpZ2h0OjBweDsiPgogICAgICAgIDxhIGhyZWY9Ii9zaXRlL0Bjb21wLmRvbWFpbi9ldmVudCI+5LqS5Yqo5oq95aWWPC9hPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJjb2wteHMtMyIgIHN0eWxlPSJwYWRkaW5nLWxlZnQ6MHB4O3BhZGRpbmctcmlnaHQ6MHB4OyI+CiAgICAgICAgPGEgaHJlZj0iL3NpdGUvQGNvbXAuZG9tYWluL2dpdmVQb2ludHNWaWV3Ij7np6/liIbkupLotaA8L2E+CiAgICA8L2Rpdj4KPC9uYXY+Cgo8IS0tIOWIhuS6q+W8ueeqlyAtLT4KPGRpdiBjbGFzcz0ibW9kYWwgZmFkZSIgaWQ9Im15TW9kYWwiIHRhYmluZGV4PSItMSIgcm9sZT0iZGlhbG9nIiBhcmlhLWxhYmVsbGVkYnk9Im15TW9kYWxMYWJlbCIgYXJpYS1oaWRkZW49InRydWUiPgogIDxkaXYgY2xhc3M9Im1vZGFsLWRpYWxvZyI+CiAgICA8ZGl2IGNsYXNzPSJtb2RhbC1jb250ZW50Ij4KICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtaGVhZGVyIj4KICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImNsb3NlIiBkYXRhLWRpc21pc3M9Im1vZGFsIj48c3BhbiBhcmlhLWhpZGRlbj0idHJ1ZSI+JnRpbWVzOzwvc3Bhbj48c3BhbiBjbGFzcz0ic3Itb25seSI+Q2xvc2U8L3NwYW4+PC9idXR0b24+CiAgICAgICAgPGg0IGNsYXNzPSJtb2RhbC10aXRsZSIgaWQ9Im15TW9kYWxMYWJlbCI+5YiG5Lqr5YiwLi4uPC9oND4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWJvZHkiPgogICAgICAgIDxkaXYgY2xhc3M9ImJkc2hhcmVidXR0b25ib3giPjxhIGhyZWY9IiMiIGNsYXNzPSJiZHNfcXpvbmUiIGRhdGEtY21kPSJxem9uZSIgdGl0bGU9IuWIhuS6q+WIsFFR56m66Ze0Ij48L2E+PGEgaHJlZj0iIyIgY2xhc3M9ImJkc190c2luYSIgZGF0YS1jbWQ9InRzaW5hIiB0aXRsZT0i5YiG5Lqr5Yiw5paw5rWq5b6u5Y2aIj48L2E+PGEgaHJlZj0iIyIgY2xhc3M9ImJkc190cXEiIGRhdGEtY21kPSJ0cXEiIHRpdGxlPSLliIbkuqvliLDohb7orq/lvq7ljZoiPjwvYT48YSBocmVmPSIjIiBjbGFzcz0iYmRzX3JlbnJlbiIgZGF0YS1jbWQ9InJlbnJlbiIgdGl0bGU9IuWIhuS6q+WIsOS6uuS6uue9kSI+PC9hPjwvZGl2PgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDwvZGl2Pgo8L2Rpdj4KPC9ib2R5Pgo8L2h0bWw+Cg==</text>
      </register>
      <register name="7" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="8" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="9" type="2">
        <text encoding="base64"></text>
      </register>
      <register name=":" type="4">
        <text>w</text>
      </register>
    </registers>
    <search>
      <last-search>veri</last-search>
      <last-offset />
      <last-pattern>veri</last-pattern>
      <last-replace>=</last-replace>
      <last-substitute>;</last-substitute>
      <last-dir>1</last-dir>
      <show-last>false</show-last>
    </search>
    <history>
      <history-search>
        <entry>select</entry>
        <entry>1-0</entry>
        <entry encoding="base64">XDzlnKjnur/orqLotK3lvIDlp4tcPg==</entry>
        <entry>;</entry>
        <entry encoding="base64">XDxvcmRlckRldGFpbFw+</entry>
        <entry>price</entry>
        <entry encoding="base64">XDxqc29uXD4=</entry>
        <entry>成功</entry>
        <entry>jhpay</entry>
        <entry>dealsum</entry>
        <entry encoding="base64">XDxwcm9kdWN0XD4=</entry>
        <entry>#product</entry>
        <entry>product</entry>
        <entry>window.loca</entry>
        <entry>par</entry>
        <entry encoding="base64">XDxwYXlEaXJlY3RcPg==</entry>
        <entry>assets</entry>
        <entry>jquery</entry>
        <entry>timeout</entry>
        <entry>veri</entry>
      </history-search>
      <history-cmd>
        <entry>nohl</entry>
        <entry encoding="base64">JzwsJz5zL2JQcml6ZS9zb3VyY2UvZw==</entry>
        <entry encoding="base64">JzwsJz5zLyIvJy9n</entry>
        <entry encoding="base64">JzwsJz5zL1wvXC8vXC9cLyAvZw==</entry>
        <entry encoding="base64">JzwsJz5zLyoqLyoqIC9n</entry>
        <entry encoding="base64">JzwsJz5zL1wqXCovXCpcKiAvZw==</entry>
        <entry encoding="base64">JzwsJz5zL0pTT05PYmplY3QvSnNvbk9iamVjdC9n</entry>
        <entry encoding="base64">JzwsJz5zL3B1dC9hZGRQcm9wZXJ0eS9n</entry>
        <entry encoding="base64">JzwsJz5zLzovLC9n</entry>
        <entry>action AceAction</entry>
        <entry encoding="base64">JzwsJz5zL3Byb2VjdGVkL3B1YmxpYy9n</entry>
        <entry encoding="base64">JzwsJz5zL3Byb3RlY3RlZC9wdWJsaWMvZw==</entry>
        <entry encoding="base64">JzwsJz5zL1xuLy9n</entry>
        <entry encoding="base64">JzwsJz5zL1xcbi8vZw==</entry>
        <entry encoding="base64">JzwsJz5zL1xcIi9gL2c=</entry>
        <entry encoding="base64">JzwsJz5zL2AvXFwiL2c=</entry>
        <entry encoding="base64">JzwsJz5zL1xcIi8vZw==</entry>
        <entry>action $Redo</entry>
        <entry encoding="base64">JzwsJz5zLzsvPS9n</entry>
        <entry>w</entry>
      </history-cmd>
      <history-expr />
      <history-input />
    </history>
    <shortcut-conflicts>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed D</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed B</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed N</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed R</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed T</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed I</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed H</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed O</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed P</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed M</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed E</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>shift ctrl pressed 2</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed 2</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed Q</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed G</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
</application>